__END__

=head1 NAME

Irssi Signal Documentation

=head1 DESCRIPTION

Perl POD documentation based on the doc/signals.txt documentation supplied with
Irssi.

=head1 USING SIGNALS

See L<Irssi/"Signals">

=begin irssi_signal_types

START OF SIGNAL TYPES

=over

=item C<GList \* of ([^,]*)> C<glistptr_$1>

=item C<GSList \* of (\w+)s> C<gslist_$1>

=item C<char \*> C<string>

=item C<ulong \*> C<ulongptr>

=item C<int \*> C<intptr>

=item C<int> C<int>



=item C<CHATNET_REC> C<iobject>

=item C<SERVER_REC> C<iobject>

=item C<RECONNECT_REC> C<iobject>

=item C<CHANNEL_REC> C<iobject>

=item C<QUERY_REC> C<iobject>

=item C<COMMAND_REC> C<iobject>

=item C<NICK_REC> C<iobject>

=item C<LOG_REC> C<Irssi::Log>

=item C<RAWLOG_REC> C<Irssi::Rawlog>

=item C<IGNORE_REC> C<Irssi::Ignore>

=item C<MODULE_REC> C<Irssi::Module>


=item C<BAN_REC> C<Irssi::Irc::Ban>

=item C<NETSPLIT_REC> C<Irssi::Irc::Netsplit>

=item C<NETSPLIT_SERVER__REC> C<Irssi::Irc::Netsplitserver>


=item C<DCC_REC> C<siobject>

=item C<AUTOIGNORE_REC> C<Irssi::Irc::Autoignore>

=item C<AUTOIGNORE_REC> C<Irssi::Irc::Autoignore>

=item C<NOTIFYLIST_REC> C<Irssi::Irc::Notifylist>

=item C<CLIENT_REC> C<Irssi::Irc::Client>


=item C<THEME_REC> C<Irssi::UI::Theme>

=item C<KEYINFO_REC> C<Irssi::UI::Keyinfo>

=item C<PROCESS_REC> C<Irssi::UI::Process>

=item C<TEXT_DEST_REC> C<Irssi::UI::TextDest>

=item C<WINDOW_REC> C<Irssi::UI::Window>

=item C<WI_ITEM_REC> C<iobject>



=item C<PERL_SCRIPT_REC> C<Irssi::Script>

=back

END OF SIGNAL TYPES

=end irssi_signal_types

=head1 SIGNAL DEFINITIONS

The following signals are categorised as in the original documentation, but
have been revised to note Perl variable types and class names.

Arguments are passed to signal handlers in the usual way, via C<@_>.

=for irssi_signal_defs START OF SIGNAL DEFINITIONS

=head2 Core

=over 4

=item C<"gui exit">

=over

=item I<None>

=back

=item C<"gui dialog">

=over

=item string C<$type>

=item string C<$text>

=back

=item C<"send command">

=over

=item string C<$command>,

=item L<Irssi::Server> C<$server>,

=item L<Irssi::Windowitem> C<$window_item>

=back

This is sent when a command is entered via the GUI, or by scripts via L<Irssi::command>.

=back

=head3 F<chat-protocols.c>:

B<TODO: What are CHAT_PROTOCOL_REC types?>

=over 4

=item C<"chat protocol created">

=over

=item CHAT_PROTOCOL_REC C<$protocol>

=back

=item C<"chat protocol updated">

=over

=item CHAT_PROTOCOL_REC C<$protocol>

=back

=item C<"chat protocol destroyed">

=over

=item CHAT_PROTOCOL_REC C<$protocol>

=back

=back

=head3 F<channels.c>:

=over 4

=item C<"channel created">

=over

=item L<Irssi::Channel> C<$channel>

=item int C<$automatic>

=back

=item C<"channel destroyed">

=over

=item  L<Irssi::Channel> C<$channel>

=back

=back

=head3 F<chatnets.c>:

=over 4

=item C<"chatnet created">

=over

=item CHATNET_REC C<$chatnet>

=back

=item C<"chatnet destroyed">

=over

=item CHATNET_REC C<$chatnet>

=back

=back

=head3 F<commands.c>:

=over 4

=item C<"commandlist new">

=over

=item L<Irssi::Command> C<$cmd>

=back

=item C<"commandlist remove">

=over

=item L<Irssi::Command> C<$cmd>

=back

=item C<"error command">

=over

=item int C<$err>

=item string C<$cmd>

=back

=item C<"send command">

=over

=item string C<$args>

=item L<Irssi::Server> C<$server>

=item L<Irssi::Windowitem> C<$witem>

=back

=item C<"send text">

=over

=item string C<$line>

=item L<Irssi::Server> C<$server>

=item L<Irssi::Windowitem> C<$witem>

=back

=item C<"command "<cmd>>

=over

=item string C<$args>

=item L<Irssi::Server> C<$server>

=item L<Irssi::Windowitem> C<$witem>

=back

B<TODO: check this "cmd" out?>

=item C<"default command">

=over

=item string C<$args>

=item L<Irssi::Server> C<$server>

=item L<Irssi::Windowitem> C<$witem>

=back

=back

=head3 F<ignore.c>:

=over 4

=item C<"ignore created">

=over

=item L<Irssi::Ignore> C<$ignore>

=back

=item C<"ignore destroyed">

=over

=item L<Irssi::Ignore> C<$ignore>

=back

=item C<"ignore changed">

=over

=item L<Irssi::Ignore> C<$ignore>

=back

=back

=head3 F<log.c>:

=over 4

=item C<"log new">

=over

=item L<Irssi::Log> C<$log>

=back

=item C<"log remove">

=over

=item L<Irssi::Log> C<$log>

=back

=item C<"log create failed">

=over

=item L<Irssi::Log> C<$log>

=back

=item C<"log locked">

=over

=item L<Irssi::Log> C<$log>

=back

=item C<"log started">

=over

=item L<Irssi::Log> C<$log>

=back

=item C<"log stopped">

=over

=item L<Irssi::Log> C<$log>

=back

=item C<"log rotated">

=over

=item L<Irssi::Log> C<$log>

=back

=item C<"log written">

=over

=item L<Irssi::Log> C<$log>

=item string C<$line>

=back

=back

=head3 F<modules.c>:

B<TODO: what are these types?>

=over 4

=item C<"module loaded">

=over

=item MODULE_REC C<$module>

=item MODULE_FILE_REC C<$module_file>

=back

=item C<"module unloaded">

=over

=item MODULE_REC C<$module>

=item MODULE_FILE_REC C<$module_file>

=back

=item C<"module error">

=over

=item int C<$error>

=item string C<$text>

=item string C<$root_module>

=item string C<$sub_module>

=back

=back

=head3 F<nicklist.c>:

=over 4

=item C<"nicklist new">

=over

=item L<Irssi::Channel> C<$channel>

=item L<Irssi::Nick> C<$nick>

=back

=item C<"nicklist remove">

=over

=item L<Irssi::Channel> C<$channel>

=item L<Irssi::Nick> C<$nick>

=back

=item C<"nicklist changed">

=over

=item L<Irssi::Channel> C<$channel>

=item L<Irssi::Nick> C<$nick>

=item string C<$old_nick>

=back

=item C<"nicklist host changed">

=over

=item L<Irssi::Channel> C<$channel>

=item L<Irssi::Nick> C<$nick>

=back

=item C<"nicklist gone changed">

=over

=item L<Irssi::Channel> C<$channel>

=item L<Irssi::Nick> C<$nick>

=back

=item C<"nicklist serverop changed">

=over

=item L<Irssi::Channel> C<$channel>

=item L<Irssi::Nick> C<$nick>

=back

=back

=head3 F<pidwait.c>:

=over 4

=item C<"pidwait">

=over

=item int C<$pid>

=item int C<$status>

=back

=back

=head3 F<queries.c>:

=over 4

=item C<"query created">

=over

=item L<Irssi::Query> C<$query>

=item int C<$automatic>

=back

=item C<"query destroyed">

=over

=item L<Irssi::Query> C<$query>

=back

=item C<"query nick changed">

=over

=item L<Irssi::Query> C<$query>

=item string C<$original_nick>

=back

=item C<"window item name changed">

=over

=item L<Irssi::Windowitem> C<$witem>

=back

=item C<"query address changed">

=over

=item L<Irssi::Query> C<$query>

=back

=item C<"query server changed">

=over

=item L<Irssi::Query> C<$query>

=item L<Irssi::Server> C<$server>

=back

=back


=head3 F<rawlog.c>:

=over 4

=item C<"rawlog">

=over

=item L<Irssi::Rawlog> C<$raw_log>

=item string C<$data>

=back

=back

=head3 F<server.c>:

=over 4

=item C<"server looking">

=over

=item L<Irssi::Server> C<$server>

=back

=item C<"server connected">

=over

=item L<Irssi::Server> C<$server>

=back


=item C<"server connecting">

=over

=item L<Irssi::Server> C<$server>

=item ulongptr C<$ip>

=back

=item C<"server connect failed">

=over

=item L<Irssi::Server> C<$server>

=back

=item C<"server disconnected">

=over

=item L<Irssi::Server> C<$server>

=back

=item C<"server quit">

=over

=item L<Irssi::Server> C<$server>

=item string C<$message>

=back

=item C<"server sendmsg">

=over

=item L<Irssi::Server> C<$server>

=item string C<$target>

=item string C<$message>

=item int C<$target_type>

=back

=back

=head3 F<settings.c>:

=over 4

=item C<"setup changed">

=over

=item I<None>

=back

=item C<"setup reread">

=over

=item string C<$fname>

=back

=item C<"setup saved">

=over

=item string C<$fname>

=item int C<$autosaved>

=back

=back

=head2 IRC Core

=head3 F<bans.c>:

=over 4

=item C<"ban type changed">

=over

=item string C<$bantype>

=back

=back

=head3 F<channels>, F<nicklist>:

B<TODO: are these actual files? .c?>

=over 4

=item C<"channel joined">

=over

=item L<Irssi::Channel> C<$channel>

=back

=item C<"channel wholist">

=over

=item L<Irssi::Channel> C<$channel>

=back

=item C<"channel sync">

=over

=item L<Irssi::Channel> C<$channel>

=back

=item C<"channel topic changed">

=over

=item L<Irssi::Channel> C<$channel>

=back

=back

=head3 F<ctcp.c>:

=over

=item C<"ctcp msg">

=over

=item L<Irssi::Server> C<$server>

=item string C<$args>

=item string C<$nick>

=item string C<$addr>

=item string C<$target>

=back

=item C<"ctcp msg "<cmd>>

=over

=item L<Irssi::Server> C<$server>

=item string C<$args>

=item string C<$nick>

=item string C<$addr>

=item string C<$target>

=back

=item C<"default ctcp msg">

=over

=item L<Irssi::Server> C<$server>

=item string C<$args>

=item string C<$nick>

=item string C<$addr>

=item string C<$target>

=back

=item C<"ctcp reply">

=over

=item L<Irssi::Server> C<$server>

=item string C<$args>

=item string C<$nick>

=item string C<$addr>

=item string C<$target>

=back

=item C<"ctcp reply "<cmd>>

=over

=item L<Irssi::Server> C<$server>

=item string C<$args>

=item string C<$nick>

=item string C<$addr>

=item string C<$target>

=back

=item C<"default ctcp reply">

=over

=item L<Irssi::Server> C<$server>

=item string C<$args>

=item string C<$nick>

=item string C<$addr>

=item string C<$target>

=back

=item C<"ctcp action">

=over

=item L<Irssi::Server> C<$server>

=item string C<$args>

=item string C<$nick>

=item string C<$addr>

=item string C<$target>

=back

=back

=head3 F<irc-log.c>:

=over

=item C<"awaylog show">

=over

=item L<Irssi::Log> C<$log>

=item int C<$away_msgs>

=item int C<$filepos>

=back

=back

=head3 F<irc-nicklist.c>:

=over

=item C<"server nick changed">

=over

=item L<Irssi::Server> C<$server>

=back

=back

=head3 F<irc-servers.c>:

=over

=item C<"event connected">

=over

=item L<Irssi::Server> C<$server>

=back

=back

=head3 F<irc.c>:

=over

=item C<"server event">

=over

=item L<Irssi::Server> C<$server>

=item string C<$data>

=item string C<$sender_nick>

=item string C<$sender_addr>

=back

=item C<"event "<cmd>>

=over

=item L<Irssi::Server> C<$server>

=item string C<$args>

=item string C<$sender_nick>

=item string C<$sender_addr>

=back

=item C<"default event">

=over

=item L<Irssi::Server> C<$server>

=item string C<$data>

=item string C<$sender_nick>

=item string C<$sender_addr>

=back

=item C<"whois default event">

=over

=item L<Irssi::Server> C<$server>

=item string C<$data>

=item string C<$sender_nick>

=item string C<$sender_addr>

=back

=item C<"server incoming">

=over

=item L<Irssi::Server> C<$server>

=item string C<$data>

=back

=item C<"redir "<cmd>>

=over

=item L<Irssi::Server> C<$server>

=item string C<$args>

=item string C<$sender_nick>

=item string C<$sender_addr>

=back

=back

=head3 F<lag.c>:

=over

=item C<"server lag">

=over

=item L<Irssi::Server> C<$server>

=back

=item C<"server lag disconnect">

=over

=item L<Irssi::Server> C<$server>

=back

=back

=head3 F<massjoin.c>:

=over

=item C<"massjoin">

=over

=item L<Irssi::Channel> C<$channel>

=item List of L<Irssi::Nick> C<@nicks>

B<TODO: Check this is actually a perl list (array)>

=back

=back

=head3 F<mode-lists.c>:

=over

=item C<"ban new">

=over

=item L<Irssi::Channel> C<$channel>

=item L<Irssi::Irc::Ban> C<$ban>

=back

=item C<"ban remove">

=over

=item L<Irssi::Channel> C<$channel>

=item L<Irssi::Irc::Ban> C<$ban>

=item string C<$set_by>

=back

=back

=head3 F<modes.c>:

=over

=item C<"channel mode changed">

=over

=item L<Irssi::Channel> C<$channel>

=item string C<$set_by>

=back

=item C<"nick mode changed">

=over

=item L<Irssi::Channel> C<$channel>

=item L<Irssi::Nick> C<$nick>

=item string C<$set_by>

=item string C<$mode>

=item string C<$type>

=back

=item C<"user mode changed">

=over

=item L<Irssi::Server> C<$server>

=item string C<$old_mode>

=back

=item C<"away mode changed">

=over

=item L<Irssi::Server> C<$server>

=back

=back

=head3 F<netsplit.c>:

=over

=item C<"netsplit server new">

=over

=item L<Irssi::Server> C<$server>

=item L<Irssi::Irc::Netsplitserver> C<$netsplit_server>

=back

=item C<"netsplit server remove">

=over

=item L<Irssi::Server> C<$server>

=item L<Irssi::Irc::Netsplitserver> C<$netsplit_server>

=back

=item C<"netsplit new">

=over

=item L<Irssi::Irc::Netsplit> C<$netsplit>

=back

=item C<"netsplit remove">

=over

=item L<Irssi::Irc::Netsplit> C<$netsplit>

=back

=back

=head2 IRC Modules


=head3 F<dcc*.c>:

=over

=item C<"dcc ctcp "<cmd>>

=over

=item string C<$args>

=item L<Irssi::Dcc> C<$dcc>

=back

=item C<"default dcc ctcp">

=over

=item string C<$args>

=item L<Irssi::Dcc> C<$dcc>

=back

=item C<"dcc unknown ctcp">

=over

=item string C<$args>

=item string C<$sender>

=item string C<$send_addr>

=back

=item C<"dcc reply "<cmd>>

=over

=item string C<$args>

=item L<Irssi::Dcc> C<$dcc>

=back

=item C<"default dcc reply">

=over

=item string C<$args>

=item L<Irssi::Dcc> C<$dcc>

=back

=item C<"dcc unknown reply">

=over

=item string C<$args>

=item string C<$sender>

=item string C<$send_addr>

=back

=item C<"dcc chat message">

=over

=item L<Irssi::Dcc> C<$dcc>

=item string C<$msg>

=back

=item C<"dcc created">

=over

=item L<Irssi::Dcc> C<$dcc>

=back

=item C<"dcc destroyed">

=over

=item L<Irssi::Dcc> C<$dcc>

=back

=item C<"dcc connected">

=over

=item L<Irssi::Dcc> C<$dcc>

=back

=item C<"dcc rejecting">

=over

=item L<Irssi::Dcc> C<$dcc>

=back

=item C<"dcc closed">

=over

=item L<Irssi::Dcc> C<$dcc>

=back

=item C<"dcc request">

=over

=item L<Irssi::Dcc> C<$dcc>

=item string C<$send_addr>

=back

=item C<"dcc request send">

=over

=item L<Irssi::Dcc> C<$dcc>

=back

=item C<"dcc chat message">

=over

=item L<Irssi::Dcc> C<$dcc>

=item string C<$msg>

=back

=item C<"dcc transfer update">

=over

=item L<Irssi::Dcc> C<$dcc>

=back

=item C<"dcc get receive">

=over

=item L<Irssi::Dcc> C<$dcc>

=back

=item C<"dcc error connect">

=over

=item L<Irssi::Dcc> C<$dcc>

=back

=item C<"dcc error file create">

=over

=item L<Irssi::Dcc> C<$dcc>

=item string C<$filename>

=back

=item C<"dcc error file open">

=over

=item string C<$nick>

=item string C<$filename>

=item int C<$errno>

=back

=item C<"dcc error get not found">

=over

=item string C<$nick>

=back

=item C<"dcc error send exists">

=over

=item string C<$nick>

=item string C<$filename>

=back

=item C<"dcc error unknown type">

=over

=item string C<$type>

=back

=item C<"dcc error close not found">

=over

=item string C<$type>

=item string C<$nick>

=item string C<$filename>

=back

=back

=head3 F<autoignore.c>:

=over

=item C<"autoignore new">

=over

=item L<Irssi::Server> C<$server>

=item L<Irssi::Irc::Autoignore> C<$autoignore>

=back

=item C<"autoignore remove">

=over

=item L<Irssi::Server> C<$server>

=item L<Irssi::Irc::Autoignore> C<$autoignore>

=back

=back

=head3 F<flood.c>:

=over

=item C<"flood">

=over

=item L<Irssi::Server> C<$server>

=item string C<$nick>

=item string C<$host>

=item int C<$level>

=item string C<$target>

=back

=back

=head3 F<notifylist.c>:

=over

=item C<"notifylist new">

=over

=item L<Irssi::Irc::Notifylist> C<$notify_list>

=back

=item C<"notifylist remove">

=over

=item L<Irssi::Irc::Notifylist> C<$notify_list>

=back

=item C<"notifylist joined">

=over

=item L<Irssi::Server> C<$server>

=item string C<$nick>

=item string C<$user>

=item string C<$host>

=item string C<$real_name>

=item string C<$away_message>

=back

=item C<"notifylist away changed">

=over

=item L<Irssi::Server> C<$server>

=item string C<$nick>

=item string C<$user>

=item string C<$host>

=item string C<$real_name>

=item string C<$away_message>

=back

=item C<"notifylist left">

=over

=item L<Irssi::Server> C<$server>

=item string C<$nick>

=item string C<$user>

=item string C<$host>

=item string C<$real_name>

=item string C<$away_message>

=back

=back

=head3 F<proxy/listen.c>:

=over

=item C<"proxy client connected">

=over

=item L<Irssi::Irc::Client> C<$client>

=back

=item C<"proxy client disconnected">

=over

=item L<Irssi::Irc::Client> C<$client>

=back

=item C<"proxy client command">

=over

=item L<Irssi::Irc::Client> C<$client>

=item string C<$args>

=item string C<$data>

=back

=item C<"proxy client dump">

=over

=item L<Irssi::Irc::Client> C<$client>

=item string C<$data>

=back

=back

=head2 Display (FE) Common

B<Requires to work properly:>

=over

=item C<"gui print text">

=over

=item L<Irssi::Window> C<$window>

=item int C<$fg>

=item int C<$bg>

=item int C<$flags>

=item string C<$text>

=item L<Irssi::UI::TextDest> C<$text_dest>

=back

=item C<"gui print text finished">

=over

=item L<Irssi::Window> C<$window>

=back

(Can be used to determine when all C<"gui print text">s are sent (not required))

=back


B<Provides signals:>

=head3 F<completion.c>:

=over

=item C<"complete word">

=over

=item arrayref of strings C<$strings_ref>

An arrayref which can be modified to add additional completion candidates.

For example:

    push @$strings_ref, "another_candidate";

=item L<Irssi::Window> C<$window>

=item string C<$word>

The prefix of the word currently being typed.

=item string C<$linestart>

The contents of the input line up to (but not including) the current
word prefix C<$word>.

=item int C<$want_space>

A scalar reference which can be set to indicate if tab completion of these
candidates should be appended with a space.

=back

=back

=head3 F<fe-common-core.c>:

=over

=item C<"irssi init read settings">

=over

=item I<None>

=back

=back

=head3 F<fe-exec.c>:

=over

=item C<"exec new">

=over

=item L<Irssi::UI::Process> C<$process>

=back

=item C<"exec remove">

=over

=item L<Irssi::UI::Process> C<$process>

=item int C<$status>

=back

=item C<"exec input">

=over

=item L<Irssi::UI::Process> C<$process>

=item string C<$text>

=back

=back

=head3 F<fe-messages.c>:

=over

=item C<"message public">

=over

=item L<Irssi::Server> C<$server>

=item string C<$msg>

=item string C<$nick>

=item string C<$address>

=item string C<$target>

=back

=item C<"message private">

=over

=item L<Irssi::Server> C<$server>

=item string C<$msg>

=item string C<$nick>

=item string C<$address>

=back

=item C<"message own_public">

=over

=item L<Irssi::Server> C<$server>

=item string C<$msg>

=item string C<$target>

=back

=item C<"message own_private">

=over

=item L<Irssi::Server> C<$server>

=item string C<$msg>

=item string C<$target>

=item string C<$original_target>

=back

=item C<"message join">

=over

=item L<Irssi::Server> C<$server>

=item string C<$channel>

=item string C<$nick>

=item string C<$address>

=back

=item C<"message part">

=over

=item L<Irssi::Server> C<$server>

=item string C<$channel>

=item string C<$nick>

=item string C<$address>

=item string C<$reason>

=back

=item C<"message quit">

=over

=item L<Irssi::Server> C<$server>

=item string C<$nick>

=item string C<$address>

=item string C<$reason>

=back

=item C<"message kick">

=over

=item L<Irssi::Server> C<$server>

=item string C<$channel>

=item string C<$nick>

=item string C<$kicker>

=item string C<$address>

=item string C<$reason>

=back

=item C<"message nick">

=over

=item L<Irssi::Server> C<$server>

=item string C<$new_nick>

=item string C<$old_nick>

=item string C<$address>

=back

=item C<"message own_nick">

=over

=item L<Irssi::Server> C<$server>

=item string C<$new_nick>

=item string C<$old_nick>

=item string C<$address>

=back

=item C<"message invite">

=over

=item L<Irssi::Server> C<$server>

=item string C<$channel>

=item string C<$nick>

=item string C<$address>

=back

=item C<"message topic">

=over

=item L<Irssi::Server> C<$server>

=item string C<$channel>

=item string C<$topic>

=item string C<$nick>

=item string C<$address>

=back

=back

=head3 F<keyboard.c>:

=over

=item C<"keyinfo created">

=over

=item L<Irssi::UI::Keyinfo> C<$key_info>

=back

=item C<"keyinfo destroyed">

=over

=item L<Irssi::UI::Keyinfo> C<$key_info>

=back

=back

=head3 F<printtext.c>:

=over

=item C<"print text">

=over

=item L<Irssi::UI::TextDest> C<$text_dest>

=item string C<$text>

=item string C<$stripped_text>

=back

=back

=head3 F<themes.c>:

=over

=item C<"theme created">

=over

=item L<Irssi::UI::Theme> C<$theme>

=back

=item C<"theme destroyed">

=over

=item L<Irssi::UI::Theme> C<$theme>

=back

=back

=head3 F<window-activity.c>:

=over

=item C<"window hilight">

=over

=item L<Irssi::UI::Window> C<$window>

=back

=item C<"window dehilight">

=over

=item L<Irssi::UI::Window> C<$window>

=back

=item C<"window activity">

=over

=item L<Irssi::UI::Window> C<$window>

=item int C<$old_level>

=back

=item C<"window item hilight">

=over

=item L<Irssi::Windowitem> C<$window_item>

=back

=item C<"window item activity">

=over

=item L<Irssi::Windowitem> C<$window_item>

=item int C<$old_level>

=back

=back

=head3 F<window-items.c>:

=over

=item C<"window item new">

=over

=item L<Irssi::UI::Window> C<$window>

=item L<Irssi::Windowitem> C<$window_item>

=back

=item C<"window item remove">

=over

=item L<Irssi::UI::Window> C<$window>

=item L<Irssi::Windowitem> C<$window_item>

=back

=item C<"window item moved">

B<TODO: Check ordering of arguments from/to here>

=over

=item L<Irssi::UI::Window> C<$window_from>

=item L<Irssi::Windowitem> C<$window_item>

=item L<Irssi::UI::Window> C<$window_to>

=back

=item C<"window item changed">

=over

=item L<Irssi::UI::Window> C<$window>

=item L<Irssi::Windowitem> C<$window_item>

=back

=item C<"window item server changed">

=over

=item L<Irssi::UI::Window> C<$window>

=item L<Irssi::Windowitem> C<$window_item>

=back

=back

=head3 F<windows.c>:

=over

=item C<"window created">

=over

=item L<Irssi::UI::Window> C<$window>

=back

=item C<"window destroyed">

=over

=item L<Irssi::UI::Window> C<$window>

=back

=item C<"window changed">

=over

=item L<Irssi::UI::Window> C<$window>

=item L<Irssi::UI::Window> C<$old_window>

=back

B<TODO: does this fire if you don't change windows? (eg: send a switch command
for the window you're already on)>

=item C<"window changed automatic">

=over

=item L<Irssi::UI::Window> C<$window>

=back

=item C<"window server changed">

=over

=item L<Irssi::UI::Window> C<$window>

=item L<Irssi::Server> C<$server>

=back

=item C<"window refnum changed">

=over

=item L<Irssi::UI::Window> C<$window>

=item int C<$old_refnum>

=back

=item C<"window name changed">

=over

=item L<Irssi::UI::Window> C<$window>

=back

=item C<"window history changed">

=over

=item L<Irssi::UI::Window> C<$window>

=item string C<$old_name>

=back

=item C<"window level changed">

=over

=item L<Irssi::UI::Window> C<$window>

=back

=back

=head2 Display (FE) IRC

=head3 F<fe-events.c>:

=over

=item C<"default event numeric">

=over

=item L<Irssi::Server> C<$server>

=item string C<$data>

=item string C<$nick>

=item string C<$address>

=back

=back

=head3 F<fe-irc-messages.c>:

=over

=item C<"message irc op_public">

=over

=item L<Irssi::Server> C<$server>

=item string C<$msg>

=item string C<$nick>

=item string C<$address>

=item string C<$target>

=back

=item C<"message irc own_wall">

=over

=item L<Irssi::Server> C<$server>

=item string C<$msg>

=item string C<$target>

=back

=item C<"message irc own_action">

=over

=item L<Irssi::Server> C<$server>

=item string C<$msg>

=item string C<$target>

=back

=item C<"message irc action">

=over

=item L<Irssi::Server> C<$server>

=item string C<$msg>

=item string C<$nick>

=item string C<$address>

=item string C<$target>

=back

=item C<"message irc own_notice">

=over

=item L<Irssi::Server> C<$server>

=item string C<$msg>

=item string C<$target>

=back

=item C<"message irc notice">

=over

=item L<Irssi::Server> C<$server>

=item string C<$msg>

=item string C<$nick>

=item string C<$address>

=item string C<$target>

=back

=item C<"message irc own_ctcp">

=over

=item L<Irssi::Server> C<$server>

=item string C<$cmd>

=item string C<$data>

=item string C<$target>

=back

=item C<"message irc ctcp">

=over

=item L<Irssi::Server> C<$server>

=item string C<$cmd>

=item string C<$data>

=item string C<$nick>

=item string C<$address>

=item string C<$target>

=back

=back

=head3 F<fe-modes.c>:

=over

=item C<"message irc mode">

=over

=item L<Irssi::Server> C<$server>

=item string C<$channel>

=item string C<$nick>

=item string C<$address>

=item string C<$mode>

=back

=back

=head3 F<dcc/fe-dcc-chat-messages.c>:

=over

=item C<"message dcc own">

=over

=item L<Irssi::Dcc> C<$dcc>

=item string C<$msg>

=back

=item C<"message dcc own_action">

=over

=item L<Irssi::Dcc> C<$dcc>

=item string C<$msg>

=back

=item C<"message dcc own_ctcp">

=over

=item L<Irssi::Dcc> C<$dcc>

=item string C<$cmd>

=item string C<$data>

=back

=item C<"message dcc">

=over

=item L<Irssi::Dcc> C<$dcc>

=item string C<$msg>

=back

=item C<"message dcc action">

=over

=item L<Irssi::Dcc> C<$dcc>

=item string C<$msg>

=back

=item C<"message dcc ctcp">

=over

=item L<Irssi::Dcc> C<$dcc>

=item string C<$cmd>

=item string C<$data>

=back

=back

=head2 Display (FE) Text

=head3 F<gui-readline.c>:

=over 4

=item C<"gui key pressed">

=over

=item int C<$key>

=back

Notes:

Ordinary keys C<a-zA-Z> are their ordinal (ascii) equivalents.

Ctrl-key begins at 1 (C<C-a>), but skips 13?, C<C-j> and C<C-m> both give the same
as C<RET> (10).  Tab and C<C-i> are equivalent (9). C<C-o> does not appear to send
an observable sequence.

C<BS> sends 127.

C<meta-E<lt>keyE<gt>> sends a 27 (ESC) followed by the original key value.

Arrow keys send usual meta-stuff (C<\e[I<ABCD>>).

B<TODO: Turn this into some sort of list>

=back

=head3 F<gui-printtext.c>:

=over 4

=item C<"beep">

=over

=item I<None>

=back

=back

=head2 Perl Scripting

=over 4

=item C<"script error">

=over

=item L<Irssi::Script> C<$script>

=item string C<$error_msg>

=back

=back

=for irssi_signal_defs END OF SIGNAL DEFINITIONS

=head1 SIGNAL AUTO-GENERATION

This file is used to auto-generate the signal definitions used by Irssi, and hence
must be edited in order to add new signals.

=head2 Format


