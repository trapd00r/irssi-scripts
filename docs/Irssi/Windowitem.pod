__END__

=head1 NAME

Irssi::Windowitem

=head1 DESCRIPTION


The meaning of "window" should be pretty clear, but "window item" is something I
couldn't really figure out a better name for :) They're simply something that's
inside a window, a channel or a query usually.  Windows can have multiple items
inside them. It's possible to create non-channel/query window items too,
currently the third possible window item is created by /EXEC -interactive.

In scripts, I think you can quite safely assume that the window item is
query or channel if the script is intended to be run in one of them.
Stupid users won't probably have other window items, and smart users
know where to run the script, or at least later figure out why it
didn't work :)

=head1 FIELDS

Windowitem->{}

  type - Type of the window item, for example "CHANNEL" or "QUERY"
  chat_type - String ID of chat protocol, for example "IRC"

  server - Active server for item
  name - Name of the item

  createtime - Time the window item was created
  data_level - 0=no new data, 1=text, 2=msg, 3=highlighted text
  hilight_color - Color of the last highlighted text

=head1 METHODS

=head2 C<print $str, [$level]>

=head2 C<command $cmd>

=head2 C<set_active>

Change window item active in parent window.


=head2 C<change_server $server>

Change server in window item.

=head2 C<is_active>

Returns 1 if window item is the active item in parent window.


=head2 C<get_dcc $item>

If `item' is a query of a =nick, return DCC chat record of nick.
returns L<Irssi::Dcc> object.

Windowitem::window_create(automatic)
  Create a new window.

=head1 full func list


    Irssi::Windowitem::activity
    Irssi::Windowitem::change_server
    Irssi::Windowitem::command
    Irssi::Windowitem::get_dcc
    Irssi::Windowitem::is_active
    Irssi::Windowitem::parse_special
    Irssi::Windowitem::print
    Irssi::Windowitem::printformat
    Irssi::Windowitem::set_active
    Irssi::Windowitem::window
    Irssi::Windowitem::window_create

