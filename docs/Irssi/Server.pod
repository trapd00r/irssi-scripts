__END__

=head1 NAME

Irssi::Server

=head1 FIELDS

Server->{}

  type - "SERVER" text
  chat_type - String ID of chat protocol, for example "IRC"

  (..contains all the same data as Connect above..)

  connect_time - Time when connect() to server finished
  real_connect_time - Time when server sent "connected" message

  tag - Unique server tag
  nick - Current nick

  connected - Is connection finished? 1|0
  connection_lost - Did we lose the connection (1) or was
                    the connection just /DISCONNECTed (0)

  rawlog - Rawlog object for the server

  version - Server version
  last_invite - Last channel we were invited to
  server_operator - Are we server operator (IRC op) 1|0
  usermode_away - Are we marked as away? 1|0
  away_reason - Away reason message
  banned - Were we banned from this server? 1|0
  lag - Current lag to server in milliseconds

=head1 METHODS

=head2 C<channels>

- return list of channels in server

=head2 C<queries>

Return list of queries in server

=head2 C<print $channel, $str, [$level]>

=head2 C<command $string>

Run the specified command on this server instance.



=head2 C<Connect::connect>

B<TODO: What is C<Connect::> package?>

Connect to server. returns L<Irssi::Server> object.

=head2 C<disconnect>

Disconnect from server.

=head2 C<server_find_tag $tag>

Find server with tag. Returns L<Irssi::Server>


=head2 C<server_find_chatnet $chatnet>

Find first server that is in `chatnet'
returns L<Irssi::Server>

=head2 C<isnickflag $flag>

Returns 1 if flag is a nick mode flag (C<@>, C<+> or C<%> in IRC)

=head2 C<ischannel $data>

Returns 1 if start of `data' seems to mean channel.

=head2 C<get_nick_flags>

Returns nick flag characters in order: op, voice, halfop (C<"@+%"> in IRC).

=head2 C<send_message $target, $msg, $target_type>

Sends a message to nick/channel. target_type 0 = channel, 1 = nick

=head2 C<netsplit_find $nick, $address>

Check if nick!address is on the other side of netsplit. Netsplit records
are automatically removed after 30 minutes (current default)..

returns L<Irssi::Irc::Netsplit>

=head2 C<netsplit_find_channel $nick, $address, $channel>

Find nick record for nick!address in channel `channel'.
returns L<Irssi::Nick>


=head2 C<dcc_ctcp_message $target, $notice, $msg>

=head2 C<channel_find $channel>

Find channel from specified server. Returns L<Irssi::Channel>

=head2 C<ignore_check $nick, $host, $channel, $text, $level>

Return 1 if ignoring matched.

=head2 C<nicks_get_same $nick>

Return all L<nick|Irssi::Nick> objects in all channels in server.
List is in format:

  Channel, Nick, Channel, ...


=head1 FULL LIST OF FUNCS

    Irssi::Server::channel_find
    Irssi::Server::channels
    Irssi::Server::channels_join
    Irssi::Server::command
    Irssi::Server::disconnect
    Irssi::Server::format_create_dest
    Irssi::Server::get_nick_flags
    Irssi::Server::ignore_check
    Irssi::Server::ischannel
    Irssi::Server::isnickflag
    Irssi::Server::mask_match
    Irssi::Server::mask_match_address
    Irssi::Server::masks_match
    Irssi::Server::nicks_get_same
    Irssi::Server::parse_special
    Irssi::Server::print
    Irssi::Server::printformat
    Irssi::Server::queries
    Irssi::Server::query_find
    Irssi::Server::ref
    Irssi::Server::send_message
    Irssi::Server::unref
    Irssi::Server::window_find_closest
    Irssi::Server::window_find_item
    Irssi::Server::window_find_level
    Irssi::Server::window_item_find

